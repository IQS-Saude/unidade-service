# This is a basic workflow to help you get started with Actions

name: Build and publish image

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]

  workflow_dispatch:

env:
  IMAGE_TAG: prd-${{ github.sha }}         # set this to your preferred AWS region, e.g. us-west-1


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t registry.digitalocean.com/iqs-site-applications-images/unidade-service:$IMAGE_TAG . -f .docker/Dockerfile

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/iqs-site-applications-images/unidade-service:$IMAGE_TAG

      - name: Update deployment file
        run: sed "s/IMAGE_TAG/$IMAGE_TAG/" "app-prd.yaml" > app-prd-deploy.yaml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-1-22-8-do-1-nyc1-1651793076167

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f app-prd-deploy.yaml

      - name: Verify deployment
        run: kubectl rollout status deployment/unidade-service --namespace=prd-iqs-services